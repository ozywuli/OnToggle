!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).OnToggle=t()}}(function(){return function n(s,l,r){function p(e,t){if(!l[e]){if(!s[e]){var o="function"==typeof require&&require;if(!t&&o)return o(e,!0);if(a)return a(e,!0);var i=new Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}var g=l[e]={exports:{}};s[e][0].call(g.exports,function(t){return p(s[e][1][t]||t)},g,g.exports,n,s,l,r)}return l[e].exports}for(var a="function"==typeof require&&require,t=0;t<r.length;t++)p(r[t]);return p}({1:[function(t,e,o){"use strict";var i,g,n,s;i=jQuery,window,g=document,s={toggleEl:".js-ontoggle-toggler",toggleTriggerEl:".js-ontoggle-trigger",toggleTargetEl:".js-ontoggle-target",isVisibleClass:"is-visible",done:function(t){}},(n={pluginName:"OnToggle"}).pluginName=function(t){this.options=i.extend({},s,t),this.init()},n.pluginName.prototype={init:function(){this.checkDevice(),i(this.options.toggleEl).on("click",this.openToggle.bind(this)),i(this.options.toggleEl).children().css("pointer-events","none"),i(g).on(this.eventType,this.detectOutsideClick.bind(this))},eventType:"click",toggleProps:{isToggled:!1,prevToggle:!1,currentToggle:!1},checkDevice:function(){var t=/iPad|iPhone|iPod/.test(navigator.userAgent)?"touchstart":"click";this.eventType=t},triggerToggle:function(t){this.openToggle(null,t)},openToggle:function(t,e){var o=void 0;t&&(t.preventDefault(),o=i(t.target).attr("data-ontoggle-target")),e&&(o=e),this.toggleProps.currentToggle!==o?(this.toggleProps.currentToggle=o,this.toggleProps.isToggled=!0):this.toggleProps.isToggled=!this.toggleProps.isToggled,i(this.options.toggleEl).not(i(this.options.toggleEl+"[data-ontoggle-target="+o+"]")).removeClass(this.options.isVisibleClass),i(this.options.toggleEl+"[data-ontoggle-target="+o+"]").toggleClass(this.options.isVisibleClass),i(this.options.toggleTargetEl).not(i(this.options.toggleTargetEl+"[data-ontoggle-target="+o+"]")).removeClass(this.options.isVisibleClass),i(this.options.toggleTargetEl+"[data-ontoggle-target="+o+"]").toggleClass(this.options.isVisibleClass),this.options.done(t,o)},detectOutsideClick:function(t){i(t.target).closest("\n                    "+this.options.toggleEl+",\n                    "+this.options.toggleTriggerEl+", \n                    "+this.options.toggleTargetEl+"\n                ").length||(i(this.options.toggleEl+", "+this.options.toggleTargetEl).removeClass(this.options.isVisibleClass),this.toggleProps.isToggled=this.toggleProps.prevToggle=this.toggleProps.currentToggle=!1,this.options.done())}},i.fn[n.pluginName]=function(t){return this.each(function(){i.data(this,"plugin_"+n.pluginName)||i.data(this,"plugin_"+n.pluginName,new OnToggle(t))})},e.exports=n.pluginName},{}]},{},[1])(1)});
//# sourceMappingURL=OnToggle.min.js.map
