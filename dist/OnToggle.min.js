!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).OnToggle=t()}}(function(){return function s(l,g,r){function a(e,t){if(!g[e]){if(!l[e]){var o="function"==typeof require&&require;if(!t&&o)return o(e,!0);if(p)return p(e,!0);var i=new Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}var n=g[e]={exports:{}};l[e][0].call(n.exports,function(t){return a(l[e][1][t]||t)},n,n.exports,s,l,g,r)}return g[e].exports}for(var p="function"==typeof require&&require,t=0;t<r.length;t++)a(r[t]);return a}({1:[function(t,e,o){"use strict";var i,n,s,l;i=jQuery,window,n=document,l={toggleEl:".js-ontoggle-toggler",toggleTargetEl:".js-ontoggle-target",isVisibleClass:"is-visible",done:function(t){}},(s={pluginName:"OnToggle"}).pluginName=function(t){this.options=i.extend({},l,t),this.init()},s.pluginName.prototype={init:function(){this.checkDevice(),i(this.options.toggleEl).on("click",this.openToggle.bind(this)),i(this.options.toggleEl).children().css("pointer-events","none"),i(n).on(this.eventType,this.detectOutsideClick.bind(this))},eventType:"click",checkDevice:function(){var t=/iPad|iPhone|iPod/.test(navigator.userAgent)?"touchstart":"click";this.eventType=t},openToggle:function(t){var e;t.preventDefault(),e=i(t.target).attr("data-ontoggle-target"),i(this.options.toggleEl).not(i(this.options.toggleEl+"[data-ontoggle-target="+e+"]")).removeClass(this.options.isVisibleClass),i(this.options.toggleEl+"[data-ontoggle-target="+e+"]").toggleClass(this.options.isVisibleClass),i(this.options.toggleTargetEl).not(i(this.options.toggleTargetEl+"[data-ontoggle-target="+e+"]")).removeClass(this.options.isVisibleClass),i(this.options.toggleTargetEl+"[data-ontoggle-target="+e+"]").toggleClass(this.options.isVisibleClass),this.options.done(t,e)},detectOutsideClick:function(t){i(t.target).closest("\n                "+this.options.toggleEl+", \n                "+this.options.toggleTargetEl).length||i(this.options.toggleEl+", "+this.options.toggleTargetEl).removeClass(this.options.isVisibleClass)}},i.fn[s.pluginName]=function(t){return this.each(function(){i.data(this,"plugin_"+s.pluginName)||i.data(this,"plugin_"+s.pluginName,new OnToggle(t))})},e.exports=s.pluginName},{}]},{},[1])(1)});
//# sourceMappingURL=OnToggle.min.js.map
