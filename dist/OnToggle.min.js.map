{"version":3,"sources":["OnToggle.min.js"],"names":["f","exports","module","define","amd","window","global","self","this","Plugin","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","$","document","undefined","pluginName","defaults","toggleEl","toggleTargetEl","isVisibleClass","OnToggle","options","extend","init","prototype","checkDevice","on","openToggle","bind","children","css","eventType","detectOutsideClick","event","test","navigator","userAgent","preventDefault","target","toggleClass","thisToggleTargetEl","attr","not","removeClass","closest","fn","each","data","jQuery"],"mappings":"CAAA,SAAUA,GAAG,GAAoB,iBAAVC,SAAoC,oBAATC,OAAsBA,OAAOD,QAAQD,SAAS,GAAmB,mBAATG,QAAqBA,OAAOC,IAAKD,UAAUH,OAAO,EAA0B,oBAATK,OAAwBA,OAA+B,oBAATC,OAAwBA,OAA6B,oBAAPC,KAAsBA,KAAYC,MAAOC,OAAST,KAA3T,CAAkU,WAAqC,OAAO,SAAUU,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAkB,mBAATC,SAAqBA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIf,EAAE,IAAIoB,MAAM,uBAAuBL,EAAE,KAAK,MAAMf,EAAEqB,KAAK,mBAAmBrB,EAAE,IAAIsB,EAAEV,EAAEG,IAAId,YAAYU,EAAEI,GAAG,GAAGQ,KAAKD,EAAErB,QAAQ,SAASS,GAAG,IAAIE,EAAED,EAAEI,GAAG,GAAGL,GAAG,OAAOI,EAAEF,GAAIF,IAAIY,EAAEA,EAAErB,QAAQS,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGd,QAAkD,IAAI,IAA1CkB,EAAkB,mBAATD,SAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEW,OAAOT,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAAvb,EAA4bW,GAAG,SAASP,EAAQhB,EAAOD,GACr0B,cAcC,SAAWyB,EAAGrB,EAAQsB,EAAUC,GAC7B,IAAIC,EAAa,WAKbC,GACAC,SAAU,aACVC,eAAgB,oBAChBC,eAAgB,cAKdC,EAAW,SAAkBC,GAC/B3B,KAAK2B,QAAUT,EAAEU,UAAWN,EAAUK,GACtC3B,KAAK6B,QAOTH,EAASI,WAKLD,KAAM,WACF7B,KAAK+B,cAELb,EAAElB,KAAK2B,QAAQJ,UAAUS,GAAG,QAAShC,KAAKiC,WAAWC,KAAKlC,OAE1DkB,EAAElB,KAAK2B,QAAQJ,UAAUY,WAAWC,IAAI,iBAAkB,QAE1DlB,EAAEC,GAAUa,GAAGhC,KAAKqC,UAAWrC,KAAKsC,mBAAmBJ,KAAKlC,QAOhEqC,UAAW,QAKXN,YAAa,WAET,IAAIQ,EAAQ,mBAAmBC,KAAKC,UAAUC,WAAa,aAAe,QAC1E1C,KAAKqC,UAAYE,GAMrBN,WAAY,SAAoBM,GAC5BA,EAAMI,iBAGNzB,EAAEqB,EAAMK,QAAQC,YAAY7C,KAAK2B,QAAQF,gBAGzC,IAAIqB,EAAqB5B,EAAEqB,EAAMK,QAAQG,KAAK,sBAG9C7B,EAAElB,KAAK2B,QAAQH,gBAAgBwB,IAAI9B,EAAE,IAAM4B,IAAqBG,YAAYjD,KAAK2B,QAAQF,gBACzFP,EAAE,IAAM4B,GAAoBD,YAAY7C,KAAK2B,QAAQF,iBAMzDa,mBAAoB,SAA4BC,GACvCrB,EAAEqB,EAAMK,QAAQM,QAAQlD,KAAK2B,QAAQJ,SAAW,KAAOvB,KAAK2B,QAAQH,gBAAgBR,QACrFE,EAAElB,KAAK2B,QAAQJ,SAAW,KAAOvB,KAAK2B,QAAQH,gBAAgByB,YAAYjD,KAAK2B,QAAQF,kBAMjGP,EAAEiC,GAAG9B,GAAc,SAAUM,GAC3B,OAAO3B,KAAKoD,KAAK,WACRlC,EAAEmC,KAAKrD,KAAM,UAAYqB,IAC1BH,EAAEmC,KAAKrD,KAAM,UAAYqB,EAAY,IAAIK,EAASC,OAQ9DjC,EAAOD,QAAUiC,EA5FpB,CA6FE4B,OAAQzD,OAAQsB,oBAER,GA9GmW,CA8G/V","file":"OnToggle.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Plugin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/**\r\n * OnToggle.js\r\n * @author Ozy Wu-Li - @ousikaa\r\n * @description Toggle DOM element state\r\n */\n\n// https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\n\n// the semi-colon before the function invocation is a safety\n// net against concatenated scripts and/or other plugins\n// that are not closed properly.\n// the anonymous function protects the `$` alias from name collisions\n;(function ($, window, document, undefined) {\n    var pluginName = 'OnToggle';\n\n    /**\r\n     * Defaults\r\n     */\n    var defaults = {\n        toggleEl: '.js-toggle',\n        toggleTargetEl: '.js-toggle-target',\n        isVisibleClass: 'is-visible'\n\n        /**\r\n         * PLUGIN CONSTRUCTOR \r\n         */\n    };var OnToggle = function OnToggle(options) {\n        this.options = $.extend({}, defaults, options);\n        this.init();\n    };\n\n    /**\r\n     * Prototype\r\n     */\n    // https://stackoverflow.com/questions/4736910/javascript-when-to-use-prototypes\n    OnToggle.prototype = {\n\n        /**\r\n         * \r\n         */\n        init: function init() {\n            this.checkDevice();\n            // ADD CLICK EVENT TO TOGGLE ELEMENT\n            $(this.options.toggleEl).on('click', this.openToggle.bind(this));\n            // REMOVE CLICK EVENT ON CHILD ELEMENTS\n            $(this.options.toggleEl).children().css('pointer-events', 'none');\n            // CLICK ANYWHERE BUT THE TOGGLE ELEMENT AND THE TARGET FROM TO DEACTIVATE\n            $(document).on(this.eventType, this.detectOutsideClick.bind(this));\n        },\n\n        /**\r\n         * Event type\r\n         * \r\n         */\n        eventType: 'click',\n\n        /**\r\n         * Check device\r\n         */\n        checkDevice: function checkDevice() {\n            // if we detect an ios device, then use the `touchstart`event instead of the `click` event\n            var event = /iPad|iPhone|iPod/.test(navigator.userAgent) ? \"touchstart\" : \"click\";\n            this.eventType = event;\n        },\n\n        /**\r\n         *  Open toggle\r\n         */\n        openToggle: function openToggle(event) {\n            event.preventDefault();\n\n            // TOGGLE THIS EL'S CLASS\n            $(event.target).toggleClass(this.options.isVisibleClass);\n\n            // get the associated toggle target\n            var thisToggleTargetEl = $(event.target).attr('data-toggle-target');\n\n            // hide any toggle target that isn't the associated target\n            $(this.options.toggleTargetEl).not($('.' + thisToggleTargetEl)).removeClass(this.options.isVisibleClass);\n            $('.' + thisToggleTargetEl).toggleClass(this.options.isVisibleClass);\n        },\n\n        /**\r\n         * Detect outside click\r\n         */\n        detectOutsideClick: function detectOutsideClick(event) {\n            if (!$(event.target).closest(this.options.toggleEl + ', ' + this.options.toggleTargetEl).length) {\n                $(this.options.toggleEl + ', ' + this.options.toggleTargetEl).removeClass(this.options.isVisibleClass);\n            }\n        }\n\n        // A really lightweight plugin wrapper around the constructor,\n        // preventing against multiple instantiations\n    };$.fn[pluginName] = function (options) {\n        return this.each(function () {\n            if (!$.data(this, \"plugin_\" + pluginName)) {\n                $.data(this, \"plugin_\" + pluginName, new OnToggle(options));\n            }\n        });\n    };\n\n    /*------------------------------------*\\\r\n      EXPORT OPTIONS\r\n    \\*------------------------------------*/\n    module.exports = OnToggle;\n})(jQuery, window, document);\n\n},{}]},{},[1])(1)\n});"]}