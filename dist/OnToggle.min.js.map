{"version":3,"sources":["OnToggle.min.js"],"names":["f","exports","module","define","amd","window","global","self","this","OnToggle","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","$","document","namespace","defaults","jQuery","toggleEl","toggleTargetEl","isVisibleClass","pluginName","options","extend","init","prototype","checkDevice","on","openToggle","bind","children","css","eventType","detectOutsideClick","event","test","navigator","userAgent","preventDefault","target","toggleClass","thisToggleTargetEl","attr","not","removeClass","closest","fn","each","data"],"mappings":"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","file":"OnToggle.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.OnToggle = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\n/**\r\n * OnToggle.js\r\n * @author Ozy Wu-Li - @ousikaa\r\n * @description Toggle DOM element state\r\n */\n\n// https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\n\n// the semi-colon before the function invocation is a safety\n// net against concatenated scripts and/or other plugins\n// that are not closed properly.\n// the anonymous function protects the `$` alias from name collisions\n;(function ($, window, document, undefined) {\n    /**\r\n     * Plugin namespace\r\n     */\n    var namespace = {\n        pluginName: 'OnToggle'\n    };\n\n    /**\r\n     * Defaults\r\n     */\n    var defaults = {\n        toggleEl: '.js-ontoggle-toggler',\n        toggleTargetEl: '.js-ontoggle-target',\n        isVisibleClass: 'is-visible'\n\n        /**\r\n         * Plugin Constructor\r\n         */\n    };namespace['pluginName'] = function (options) {\n        this.options = $.extend({}, defaults, options);\n        this.init();\n    };\n\n    /**\r\n     * Prototype\r\n     */\n    // https://stackoverflow.com/questions/4736910/javascript-when-to-use-prototypes\n    namespace['pluginName'].prototype = {\n\n        /**\r\n         * \r\n         */\n        init: function init() {\n            this.checkDevice();\n            // ADD CLICK EVENT TO TOGGLE ELEMENT\n            $(this.options.toggleEl).on('click', this.openToggle.bind(this));\n            // REMOVE CLICK EVENT ON CHILD ELEMENTS\n            $(this.options.toggleEl).children().css('pointer-events', 'none');\n            // CLICK ANYWHERE BUT THE TOGGLE ELEMENT AND THE TARGET FROM TO DEACTIVATE\n            $(document).on(this.eventType, this.detectOutsideClick.bind(this));\n        },\n\n        /**\r\n         * Event type\r\n         * \r\n         */\n        eventType: 'click',\n\n        /**\r\n         * Check device\r\n         */\n        checkDevice: function checkDevice() {\n            // if we detect an ios device, then use the `touchstart`event instead of the `click` event\n            var event = /iPad|iPhone|iPod/.test(navigator.userAgent) ? \"touchstart\" : \"click\";\n            this.eventType = event;\n        },\n\n        /**\r\n         *  Open toggle\r\n         */\n        openToggle: function openToggle(event) {\n            event.preventDefault();\n\n            // TOGGLE THIS EL'S CLASS\n            $(event.target).toggleClass(this.options.isVisibleClass);\n\n            // get the associated toggle target\n            var thisToggleTargetEl = $(event.target).attr('data-ontoggle-target');\n\n            // hide any toggle target that isn't the associated target\n            $(this.options.toggleTargetEl).not($(this.options.toggleTargetEl + '[data-ontoggle-target=' + thisToggleTargetEl + ']')).removeClass(this.options.isVisibleClass);\n\n            // toggle the class of the target element\n            $(this.options.toggleTargetEl + '[data-ontoggle-target=' + thisToggleTargetEl + ']').toggleClass(this.options.isVisibleClass);\n        },\n\n        /**\r\n         * Detect outside click\r\n         */\n        detectOutsideClick: function detectOutsideClick(event) {\n            if (!$(event.target).closest(this.options.toggleEl + ', ' + this.options.toggleTargetEl).length) {\n                $(this.options.toggleEl + ', ' + this.options.toggleTargetEl).removeClass(this.options.isVisibleClass);\n            }\n        }\n\n        // A really lightweight plugin wrapper around the constructor,\n        // preventing against multiple instantiations\n    };$.fn[namespace['pluginName']] = function (options) {\n        return this.each(function () {\n            if (!$.data(this, \"plugin_\" + namespace['pluginName'])) {\n                $.data(this, \"plugin_\" + namespace['pluginName'], new OnToggle(options));\n            }\n        });\n    };\n\n    /*------------------------------------*\\\r\n      EXPORT OPTIONS\r\n    \\*------------------------------------*/\n    module.exports = namespace['pluginName'];\n})(jQuery, window, document);\n\n},{}]},{},[1])(1)\n});\n"]}