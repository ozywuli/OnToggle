{"version":3,"sources":["OnToggle.min.js"],"names":["f","exports","module","define","window"],"mappings":"UAAUA,GAAG,GAAoBC,iBAAVA,SAAoC,oBAAAC,OAAaA,OAAOD,QAAQD,SAAmBG,GAASA,mBAATA,QAAqBA,OAAYA,IAAAA,OAAUH,GAAAA,OAuB7HC,EAAAA,oBAvBqJG,OAuBrJH,OAAAA,oBAAAA,OAAAA,OAAAA,oBAAAA,KAAAA,KAAAA,MAAAA,OAAAA,MAAAA,WAAAA,OAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,IAAAA,EAAAA,mBAAAA,SAAAA,QAAAA,IAAAA,GAAAA,EAAAA,OAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,OAAAA,EAAAA,GAAAA,GAAAA,IAAAA,EAAAA,IAAAA,MAAAA,uBAAAA,EAAAA,KAAAA,MAAAA,EAAAA,KAAAA,mBAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAAAA,QAAAA,IAAAA,EAAAA,GAAAA,GAAAA,KAAAA,EAAAA,QAAAA,SAAAA,GAAAA,OAAAA,EAAAA,EAAAA,GAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,QAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,GAAAA,QAAAA,IAAAA,IAAAA,EAAAA,mBAAAA,SAAAA,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,SAAAA,EAAAA,EAAAA,m4CAAAA","file":"OnToggle.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Plugin = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\n/**\r\n * OnToggle.js\r\n * @author Ozy Wu-Li - @ousikaa\r\n * @description Toggle DOM element state\r\n */\n\n// https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\n\n// the semi-colon before the function invocation is a safety\n// net against concatenated scripts and/or other plugins\n// that are not closed properly.\n// the anonymous function protects the `$` alias from name collisions\n;(function ($, window, document, undefined) {\n    var pluginName = 'OnToggle';\n\n    /**\r\n     * Defaults\r\n     */\n    var defaults = {\n        toggleEl: '.js-toggle',\n        toggleTargetEl: '.js-toggle-target',\n        isVisibleClass: 'is-visible'\n\n        /**\r\n         * PLUGIN CONSTRUCTOR \r\n         */\n    };var OnToggle = function OnToggle(options) {\n        this.options = $.extend({}, defaults, options);\n        this.init();\n    };\n\n    /**\r\n     * Prototype\r\n     */\n    // https://stackoverflow.com/questions/4736910/javascript-when-to-use-prototypes\n    OnToggle.prototype = {\n\n        /**\r\n         * \r\n         */\n        init: function init() {\n            this.checkDevice();\n            // ADD CLICK EVENT TO TOGGLE ELEMENT\n            $(this.options.toggleEl).on('click', this.openToggle.bind(this));\n            // REMOVE CLICK EVENT ON CHILD ELEMENTS\n            $(this.options.toggleEl).children().css('pointer-events', 'none');\n            // CLICK ANYWHERE BUT THE TOGGLE ELEMENT AND THE TARGET FROM TO DEACTIVATE\n            $(document).on(this.eventType, this.detectOutsideClick.bind(this));\n        },\n\n        /**\r\n         * Event type\r\n         * \r\n         */\n        eventType: 'click',\n\n        /**\r\n         * Check device\r\n         */\n        checkDevice: function checkDevice() {\n            // if we detect an ios device, then use the `touchstart`event instead of the `click` event\n            var event = /iPad|iPhone|iPod/.test(navigator.userAgent) ? \"touchstart\" : \"click\";\n            this.eventType = event;\n        },\n\n        /**\r\n         *  Open toggle\r\n         */\n        openToggle: function openToggle(event) {\n            event.preventDefault();\n\n            // TOGGLE THIS EL'S CLASS\n            $(event.target).toggleClass(this.options.isVisibleClass);\n\n            // get the associated toggle target\n            var thisToggleTargetEl = $(event.target).attr('data-toggle-target');\n\n            // hide any toggle target that isn't the associated target\n            $(this.options.toggleTargetEl).not($('.' + thisToggleTargetEl)).removeClass(this.options.isVisibleClass);\n            $('.' + thisToggleTargetEl).toggleClass(this.options.isVisibleClass);\n        },\n\n        /**\r\n         * Detect outside click\r\n         */\n        detectOutsideClick: function detectOutsideClick(event) {\n            if (!$(event.target).closest(this.options.toggleEl + ', ' + this.options.toggleTargetEl).length) {\n                $(this.options.toggleEl + ', ' + this.options.toggleTargetEl).removeClass(this.options.isVisibleClass);\n            }\n        }\n\n        // A really lightweight plugin wrapper around the constructor,\n        // preventing against multiple instantiations\n    };$.fn[pluginName] = function (options) {\n        return this.each(function () {\n            if (!$.data(this, \"plugin_\" + pluginName)) {\n                $.data(this, \"plugin_\" + pluginName, new OnToggle(options));\n            }\n        });\n    };\n\n    /*------------------------------------*\\\r\n      EXPORT OPTIONS\r\n    \\*------------------------------------*/\n    module.exports = OnToggle;\n})(jQuery, window, document);\n\n},{}]},{},[1])(1)\n});\n"]}