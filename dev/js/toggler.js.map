{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/toggler.js"],"names":[],"mappings":"AAAA;;;ACAA;;AAEA;AACA;AACA;AACA;AACA,CAAC,CAAC,UAAU,CAAV,EAAa,MAAb,EAAqB,QAArB,EAA+B,SAA/B,EAA2C;AACzC,QAAI,aAAa,UAAjB;;AAEA;;;AAGA,QAAI,WAAW;AACX,kBAAU,YADC;AAEX,wBAAgB,mBAFL;AAGX,wBAAgB;;AAGpB;;;AANe,KAAf,CASA,IAAI,WAAW,SAAX,QAAW,CAAU,OAAV,EAAoB;AAC/B,aAAK,OAAL,GAAe,EAAE,MAAF,CAAU,EAAV,EAAc,QAAd,EAAwB,OAAxB,CAAf;AACA,aAAK,IAAL;AACH,KAHD;;AAKA;;;AAGA;AACA,aAAS,SAAT,GAAqB;;AAEjB;;;AAGA,cAAM,gBAAW;AACb,iBAAK,WAAL;AACA,cAAE,KAAK,OAAL,CAAa,QAAf,EAAyB,EAAzB,CAA4B,OAA5B,EAAqC,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAArC;AACA,cAAE,QAAF,EAAY,EAAZ,CAAe,KAAK,SAApB,EAA+B,KAAK,kBAAL,CAAwB,IAAxB,CAA6B,IAA7B,CAA/B;AACH,SATgB;;AAWjB;;;AAGA,mBAAW,OAdM;;AAgBjB;;;AAGA,qBAAa,uBAAW;AACpB;AACA,gBAAI,QAAS,mBAAmB,IAAnB,CAAwB,UAAU,SAAlC,CAAD,GAAiD,YAAjD,GAAgE,OAA5E;AACA,iBAAK,KAAL,GAAa,KAAb;AACH,SAvBgB;AAwBjB;;;AAGA,oBAAY,oBAAS,KAAT,EAAgB;AACxB,kBAAM,cAAN;AACA;AACA,gBAAI,qBAAqB,EAAE,MAAM,MAAR,EAAgB,IAAhB,CAAqB,oBAArB,CAAzB;;AAEA;AACA,cAAE,KAAK,OAAL,CAAa,cAAf,EAA+B,GAA/B,CAAoC,QAAM,kBAAN,CAApC,EAAkE,WAAlE,CAA8E,aAA9E;AACA,oBAAM,kBAAN,EAA4B,WAA5B,CAAwC,KAAK,OAAL,CAAa,cAArD;AACH,SAnCgB;;AAqCjB;;;AAGA,4BAAoB,4BAAS,KAAT,EAAgB;AAChC,gBAAK,CAAC,EAAE,MAAM,MAAR,EAAgB,OAAhB,CAA4B,KAAK,OAAL,CAAa,QAAzC,UAAsD,KAAK,OAAL,CAAa,cAAnE,EAAsF,MAA5F,EAAqG;AACjG,uBAAK,KAAK,OAAL,CAAa,cAAlB,EAAoC,WAApC,CAAgD,KAAK,OAAL,CAAa,cAA7D;AACH;AACJ;;AAGL;AACA;AAhDqB,KAArB,CAiDA,EAAE,EAAF,CAAK,UAAL,IAAmB,UAAW,OAAX,EAAqB;AACpC,eAAO,KAAK,IAAL,CAAU,YAAY;AACzB,gBAAI,CAAC,EAAE,IAAF,CAAO,IAAP,EAAa,YAAY,UAAzB,CAAL,EAA2C;AACvC,kBAAE,IAAF,CAAO,IAAP,EAAa,YAAY,UAAzB,EACA,IAAI,QAAJ,CAAc,OAAd,CADA;AAEH;AACJ,SALM,CAAP;AAMH,KAPD;;AASA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAO,QAAP,GAAkB,QAAlB;AACA;AAEH,CAlGA,EAkGG,MAlGH,EAkGW,MAlGX,EAkGoB,QAlGpB","file":"toggler.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\r\n\r\n// the semi-colon before the function invocation is a safety\r\n// net against concatenated scripts and/or other plugins\r\n// that are not closed properly.\r\n// the anonymous function protects the `$` alias from name collisions\r\n;(function( $, window, document, undefined ) {\r\n    let pluginName = 'OnToggle';\r\n\r\n    /**\r\n     * \r\n     */\r\n    let defaults = {\r\n        toggleEl: '.js-toggle',\r\n        toggleTargetEl: '.js-toggle-target',\r\n        isVisibleClass: 'is-visible'\r\n    }\r\n\r\n    /**\r\n     * PLUGIN CONSTRUCTOR \r\n     */\r\n    let OnToggle = function( options ) {\r\n        this.options = $.extend( {}, defaults, options );\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    // https://stackoverflow.com/questions/4736910/javascript-when-to-use-prototypes\r\n    OnToggle.prototype = {\r\n        \r\n        /**\r\n         * \r\n         */\r\n        init: function() {\r\n            this.checkDevice();\r\n            $(this.options.toggleEl).on('click', this.openToggle.bind(this));\r\n            $(document).on(this.eventType, this.detectOutsideClick.bind(this));\r\n        },\r\n        \r\n        /**\r\n         * \r\n         */\r\n        eventType: 'click',\r\n\r\n        /**\r\n         * \r\n         */\r\n        checkDevice: function() {\r\n            // if we detect an ios device, then use the `touchstart`event instead of the `click` event\r\n            let event = (/iPad|iPhone|iPod/.test(navigator.userAgent)) ? \"touchstart\" : \"click\";\r\n            this.event = event;\r\n        },\r\n        /**\r\n         * \r\n         */\r\n        openToggle: function(event) {\r\n            event.preventDefault();\r\n            // get the associated toggle target\r\n            let thistoggleTargetEl = $(event.target).attr('data-toggle-target');\r\n\r\n            // hide any toggle target that isn't the associated target\r\n            $(this.options.toggleTargetEl).not( $(`.${thistoggleTargetEl}`) ).removeClass('is-revealed');\r\n            $(`.${thistoggleTargetEl}`).toggleClass(this.options.isVisibleClass);\r\n        },\r\n\r\n        /**\r\n         * \r\n         */\r\n        detectOutsideClick: function(event) {\r\n            if ( !$(event.target).closest( `${this.options.toggleEl}, ${this.options.toggleTargetEl}` ).length ) {\r\n                $(`${this.options.toggleTargetEl}`).removeClass(this.options.isVisibleClass);\r\n            }\r\n        }\r\n    }\r\n\r\n    // A really lightweight plugin wrapper around the constructor,\r\n    // preventing against multiple instantiations\r\n    $.fn[pluginName] = function ( options ) {\r\n        return this.each(function () {\r\n            if (!$.data(this, \"plugin_\" + pluginName)) {\r\n                $.data(this, \"plugin_\" + pluginName,\r\n                new OnToggle( options ));\r\n            }\r\n        });\r\n    };\r\n\r\n    /*------------------------------------*\\\r\n      EXPORT OPTIONS\r\n    \\*------------------------------------*/\r\n    // if (typeof define === 'function' && define.amd) {\r\n    //     define([], function() {\r\n    //         return toggle;\r\n    //     });\r\n    // } else if (typeof exports !== \"undefined\" && exports !== null) {\r\n    //     module.exports = toggle;\r\n    // } else {\r\n    //     window.toggle = toggle;\r\n    // }\r\n\r\n    window.OnToggle = OnToggle;\r\n    // export default OnToggle;\r\n\r\n})( jQuery, window , document );"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvdG9nZ2xlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsVUFBVSxDQUFWLEVBQWEsTUFBYixFQUFxQixRQUFyQixFQUErQixTQUEvQixFQUEyQztBQUN6QyxRQUFJLGFBQWEsVUFBakI7O0FBRUE7OztBQUdBLFFBQUksV0FBVztBQUNYLGtCQUFVLFlBREM7QUFFWCx3QkFBZ0IsbUJBRkw7QUFHWCx3QkFBZ0I7O0FBR3BCOzs7QUFOZSxLQUFmLENBU0EsSUFBSSxXQUFXLFNBQVgsUUFBVyxDQUFVLE9BQVYsRUFBb0I7QUFDL0IsYUFBSyxPQUFMLEdBQWUsRUFBRSxNQUFGLENBQVUsRUFBVixFQUFjLFFBQWQsRUFBd0IsT0FBeEIsQ0FBZjtBQUNBLGFBQUssSUFBTDtBQUNILEtBSEQ7O0FBS0E7OztBQUdBO0FBQ0EsYUFBUyxTQUFULEdBQXFCOztBQUVqQjs7O0FBR0EsY0FBTSxnQkFBVztBQUNiLGlCQUFLLFdBQUw7QUFDQSxjQUFFLEtBQUssT0FBTCxDQUFhLFFBQWYsRUFBeUIsRUFBekIsQ0FBNEIsT0FBNUIsRUFBcUMsS0FBSyxVQUFMLENBQWdCLElBQWhCLENBQXFCLElBQXJCLENBQXJDO0FBQ0EsY0FBRSxRQUFGLEVBQVksRUFBWixDQUFlLEtBQUssU0FBcEIsRUFBK0IsS0FBSyxrQkFBTCxDQUF3QixJQUF4QixDQUE2QixJQUE3QixDQUEvQjtBQUNILFNBVGdCOztBQVdqQjs7O0FBR0EsbUJBQVcsT0FkTTs7QUFnQmpCOzs7QUFHQSxxQkFBYSx1QkFBVztBQUNwQjtBQUNBLGdCQUFJLFFBQVMsbUJBQW1CLElBQW5CLENBQXdCLFVBQVUsU0FBbEMsQ0FBRCxHQUFpRCxZQUFqRCxHQUFnRSxPQUE1RTtBQUNBLGlCQUFLLEtBQUwsR0FBYSxLQUFiO0FBQ0gsU0F2QmdCO0FBd0JqQjs7O0FBR0Esb0JBQVksb0JBQVMsS0FBVCxFQUFnQjtBQUN4QixrQkFBTSxjQUFOO0FBQ0E7QUFDQSxnQkFBSSxxQkFBcUIsRUFBRSxNQUFNLE1BQVIsRUFBZ0IsSUFBaEIsQ0FBcUIsb0JBQXJCLENBQXpCOztBQUVBO0FBQ0EsY0FBRSxLQUFLLE9BQUwsQ0FBYSxjQUFmLEVBQStCLEdBQS9CLENBQW9DLFFBQU0sa0JBQU4sQ0FBcEMsRUFBa0UsV0FBbEUsQ0FBOEUsYUFBOUU7QUFDQSxvQkFBTSxrQkFBTixFQUE0QixXQUE1QixDQUF3QyxLQUFLLE9BQUwsQ0FBYSxjQUFyRDtBQUNILFNBbkNnQjs7QUFxQ2pCOzs7QUFHQSw0QkFBb0IsNEJBQVMsS0FBVCxFQUFnQjtBQUNoQyxnQkFBSyxDQUFDLEVBQUUsTUFBTSxNQUFSLEVBQWdCLE9BQWhCLENBQTRCLEtBQUssT0FBTCxDQUFhLFFBQXpDLFVBQXNELEtBQUssT0FBTCxDQUFhLGNBQW5FLEVBQXNGLE1BQTVGLEVBQXFHO0FBQ2pHLHVCQUFLLEtBQUssT0FBTCxDQUFhLGNBQWxCLEVBQW9DLFdBQXBDLENBQWdELEtBQUssT0FBTCxDQUFhLGNBQTdEO0FBQ0g7QUFDSjs7QUFHTDtBQUNBO0FBaERxQixLQUFyQixDQWlEQSxFQUFFLEVBQUYsQ0FBSyxVQUFMLElBQW1CLFVBQVcsT0FBWCxFQUFxQjtBQUNwQyxlQUFPLEtBQUssSUFBTCxDQUFVLFlBQVk7QUFDekIsZ0JBQUksQ0FBQyxFQUFFLElBQUYsQ0FBTyxJQUFQLEVBQWEsWUFBWSxVQUF6QixDQUFMLEVBQTJDO0FBQ3ZDLGtCQUFFLElBQUYsQ0FBTyxJQUFQLEVBQWEsWUFBWSxVQUF6QixFQUNBLElBQUksUUFBSixDQUFjLE9BQWQsQ0FEQTtBQUVIO0FBQ0osU0FMTSxDQUFQO0FBTUgsS0FQRDs7QUFTQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFdBQU8sUUFBUCxHQUFrQixRQUFsQjtBQUNBO0FBRUgsQ0FsR0EsRUFrR0csTUFsR0gsRUFrR1csTUFsR1gsRUFrR29CLFFBbEdwQiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvLyBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5LWJvaWxlcnBsYXRlL2pxdWVyeS1wYXR0ZXJucy9ibG9iL21hc3Rlci9wYXR0ZXJucy9qcXVlcnkuYmFzaWMucGx1Z2luLWJvaWxlcnBsYXRlLmpzXHJcblxyXG4vLyB0aGUgc2VtaS1jb2xvbiBiZWZvcmUgdGhlIGZ1bmN0aW9uIGludm9jYXRpb24gaXMgYSBzYWZldHlcclxuLy8gbmV0IGFnYWluc3QgY29uY2F0ZW5hdGVkIHNjcmlwdHMgYW5kL29yIG90aGVyIHBsdWdpbnNcclxuLy8gdGhhdCBhcmUgbm90IGNsb3NlZCBwcm9wZXJseS5cclxuLy8gdGhlIGFub255bW91cyBmdW5jdGlvbiBwcm90ZWN0cyB0aGUgYCRgIGFsaWFzIGZyb20gbmFtZSBjb2xsaXNpb25zXHJcbjsoZnVuY3Rpb24oICQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCApIHtcclxuICAgIGxldCBwbHVnaW5OYW1lID0gJ09uVG9nZ2xlJztcclxuXHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICovXHJcbiAgICBsZXQgZGVmYXVsdHMgPSB7XHJcbiAgICAgICAgdG9nZ2xlRWw6ICcuanMtdG9nZ2xlJyxcclxuICAgICAgICB0b2dnbGVUYXJnZXRFbDogJy5qcy10b2dnbGUtdGFyZ2V0JyxcclxuICAgICAgICBpc1Zpc2libGVDbGFzczogJ2lzLXZpc2libGUnXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQTFVHSU4gQ09OU1RSVUNUT1IgXHJcbiAgICAgKi9cclxuICAgIGxldCBPblRvZ2dsZSA9IGZ1bmN0aW9uKCBvcHRpb25zICkge1xyXG4gICAgICAgIHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKCB7fSwgZGVmYXVsdHMsIG9wdGlvbnMgKTtcclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICovXHJcbiAgICAvLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy80NzM2OTEwL2phdmFzY3JpcHQtd2hlbi10by11c2UtcHJvdG90eXBlc1xyXG4gICAgT25Ub2dnbGUucHJvdG90eXBlID0ge1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB0aGlzLmNoZWNrRGV2aWNlKCk7XHJcbiAgICAgICAgICAgICQodGhpcy5vcHRpb25zLnRvZ2dsZUVsKS5vbignY2xpY2snLCB0aGlzLm9wZW5Ub2dnbGUuYmluZCh0aGlzKSk7XHJcbiAgICAgICAgICAgICQoZG9jdW1lbnQpLm9uKHRoaXMuZXZlbnRUeXBlLCB0aGlzLmRldGVjdE91dHNpZGVDbGljay5iaW5kKHRoaXMpKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGV2ZW50VHlwZTogJ2NsaWNrJyxcclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgY2hlY2tEZXZpY2U6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAvLyBpZiB3ZSBkZXRlY3QgYW4gaW9zIGRldmljZSwgdGhlbiB1c2UgdGhlIGB0b3VjaHN0YXJ0YGV2ZW50IGluc3RlYWQgb2YgdGhlIGBjbGlja2AgZXZlbnRcclxuICAgICAgICAgICAgbGV0IGV2ZW50ID0gKC9pUGFkfGlQaG9uZXxpUG9kLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSA/IFwidG91Y2hzdGFydFwiIDogXCJjbGlja1wiO1xyXG4gICAgICAgICAgICB0aGlzLmV2ZW50ID0gZXZlbnQ7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBcclxuICAgICAgICAgKi9cclxuICAgICAgICBvcGVuVG9nZ2xlOiBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAvLyBnZXQgdGhlIGFzc29jaWF0ZWQgdG9nZ2xlIHRhcmdldFxyXG4gICAgICAgICAgICBsZXQgdGhpc3RvZ2dsZVRhcmdldEVsID0gJChldmVudC50YXJnZXQpLmF0dHIoJ2RhdGEtdG9nZ2xlLXRhcmdldCcpO1xyXG5cclxuICAgICAgICAgICAgLy8gaGlkZSBhbnkgdG9nZ2xlIHRhcmdldCB0aGF0IGlzbid0IHRoZSBhc3NvY2lhdGVkIHRhcmdldFxyXG4gICAgICAgICAgICAkKHRoaXMub3B0aW9ucy50b2dnbGVUYXJnZXRFbCkubm90KCAkKGAuJHt0aGlzdG9nZ2xlVGFyZ2V0RWx9YCkgKS5yZW1vdmVDbGFzcygnaXMtcmV2ZWFsZWQnKTtcclxuICAgICAgICAgICAgJChgLiR7dGhpc3RvZ2dsZVRhcmdldEVsfWApLnRvZ2dsZUNsYXNzKHRoaXMub3B0aW9ucy5pc1Zpc2libGVDbGFzcyk7XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZGV0ZWN0T3V0c2lkZUNsaWNrOiBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICAgICAgICBpZiAoICEkKGV2ZW50LnRhcmdldCkuY2xvc2VzdCggYCR7dGhpcy5vcHRpb25zLnRvZ2dsZUVsfSwgJHt0aGlzLm9wdGlvbnMudG9nZ2xlVGFyZ2V0RWx9YCApLmxlbmd0aCApIHtcclxuICAgICAgICAgICAgICAgICQoYCR7dGhpcy5vcHRpb25zLnRvZ2dsZVRhcmdldEVsfWApLnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5pc1Zpc2libGVDbGFzcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQSByZWFsbHkgbGlnaHR3ZWlnaHQgcGx1Z2luIHdyYXBwZXIgYXJvdW5kIHRoZSBjb25zdHJ1Y3RvcixcclxuICAgIC8vIHByZXZlbnRpbmcgYWdhaW5zdCBtdWx0aXBsZSBpbnN0YW50aWF0aW9uc1xyXG4gICAgJC5mbltwbHVnaW5OYW1lXSA9IGZ1bmN0aW9uICggb3B0aW9ucyApIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCEkLmRhdGEodGhpcywgXCJwbHVnaW5fXCIgKyBwbHVnaW5OYW1lKSkge1xyXG4gICAgICAgICAgICAgICAgJC5kYXRhKHRoaXMsIFwicGx1Z2luX1wiICsgcGx1Z2luTmFtZSxcclxuICAgICAgICAgICAgICAgIG5ldyBPblRvZ2dsZSggb3B0aW9ucyApKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxyXG4gICAgICBFWFBPUlQgT1BUSU9OU1xyXG4gICAgXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuICAgIC8vIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcclxuICAgIC8vICAgICBkZWZpbmUoW10sIGZ1bmN0aW9uKCkge1xyXG4gICAgLy8gICAgICAgICByZXR1cm4gdG9nZ2xlO1xyXG4gICAgLy8gICAgIH0pO1xyXG4gICAgLy8gfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBleHBvcnRzICE9PSBudWxsKSB7XHJcbiAgICAvLyAgICAgbW9kdWxlLmV4cG9ydHMgPSB0b2dnbGU7XHJcbiAgICAvLyB9IGVsc2Uge1xyXG4gICAgLy8gICAgIHdpbmRvdy50b2dnbGUgPSB0b2dnbGU7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgd2luZG93Lk9uVG9nZ2xlID0gT25Ub2dnbGU7XHJcbiAgICAvLyBleHBvcnQgZGVmYXVsdCBPblRvZ2dsZTtcclxuXHJcbn0pKCBqUXVlcnksIHdpbmRvdyAsIGRvY3VtZW50ICk7Il19"}