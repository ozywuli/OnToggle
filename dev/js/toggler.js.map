{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/toggler.js"],"names":[],"mappings":"AAAA;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;;;AAGA,OAAO,OAAP,GAAiB;AACb;;;AAGA,aAAS,mBAAW;AAChB,gBAAQ,KAAR,GAAiB,mBAAmB,IAAnB,CAAwB,UAAU,SAAlC,CAAD,GAAiD,YAAjD,GAAgE,OAAhF;;AAEA,UAAE,QAAQ,QAAV,EAAoB,EAApB,CAAuB,OAAvB,EAAgC,QAAQ,UAAxC;AACA,UAAE,QAAF,EAAY,EAAZ,CAAe,QAAQ,KAAvB,EAA8B,QAAQ,kBAAtC;AACH,KATY;;AAWb;;;AAGA,WAAO,OAdM;;AAgBb;;;AAGA,cAAU,aAnBG;;AAqBb;;;AAGA,mBAAe,oBAxBF;;AA0Bb;;;AAGA,gBAAY,oBAAS,KAAT,EAAgB;AACxB,cAAM,cAAN;AACA;AACA,YAAI,mBAAmB,EAAE,IAAF,EAAQ,IAAR,CAAa,qBAAb,CAAvB;AACA;AACA,UAAE,QAAQ,aAAV,EAAyB,GAAzB,CAA8B,QAAM,gBAAN,CAA9B,EAA0D,WAA1D,CAAsE,aAAtE;;AAEA,gBAAM,gBAAN,EAA0B,WAA1B,CAAsC,aAAtC;AACH,KArCY;;AAuCb;;;AAGA,wBAAoB,4BAAS,KAAT,EAAgB;AAChC,YAAK,CAAC,EAAE,MAAM,MAAR,EAAgB,OAAhB,CAA4B,QAAQ,QAApC,UAAiD,QAAQ,aAAzD,EAA2E,MAAjF,EAA0F;AACtF,cAAE,QAAQ,aAAV,EAAyB,WAAzB,CAAqC,aAArC;AACH;AACJ;AA9CY,CAAjB","file":"toggler.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// the semi-colon before the function invocation is a safety\r\n// net against concatenated scripts and/or other plugins\r\n// that are not closed properly.\r\n// the anonymous function protects the `$` alias\r\n// ;(function( $, window, document, undefined ) {\r\n//     // if we detect an ios device, then use the `touchstart`event instead of the `click` event\r\n//     let event = (/iPad|iPhone|iPod/.test(navigator.userAgent)) ? \"touchstart\" : \"click\";\r\n\r\n//     let defaults = {\r\n\r\n//     }\r\n\r\n//     // PLUGIN CONSTRUCTOR\r\n//     function Toggler( element, options ) {\r\n//         this.element = element;\r\n\r\n//         this.options = $.extend( {}, defaults, options );\r\n\r\n//         this._defaults = defaults;\r\n\r\n//         this._name = Toggler;\r\n\r\n//         this.init();\r\n//     }\r\n\r\n//     Toggler.prototype = {\r\n//         init: function() {\r\n\r\n//         }\r\n//     }\r\n\r\n\r\n\r\n//     /*------------------------------------*\\\r\n//       EXPORT OPTIONS\r\n//     \\*------------------------------------*/\r\n//     if (typeof define === 'function' && define.amd) {\r\n//         define([], function() {\r\n//             return Toggler;\r\n//         });\r\n//     } else if (typeof exports !== \"undefined\" && exports !== null) {\r\n//         module.exports = Toggler;\r\n//     } else {\r\n//         window.Toggler = Toggler;\r\n//     }\r\n\r\n\r\n\r\n// })( jQuery, window , document );\r\n\r\n\r\nwindow.Toggler = {\r\n    /**\r\n     * \r\n     */\r\n    onReady: function() {\r\n        Toggler.event = (/iPad|iPhone|iPod/.test(navigator.userAgent)) ? \"touchstart\" : \"click\";\r\n\r\n        $(Toggler.$toggler).on('click', Toggler.openToggle);\r\n        $(document).on(Toggler.event, Toggler.detectOutsideClick);\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    event: 'click',\r\n\r\n    /**\r\n     * \r\n     */\r\n    $toggler: '.js-toggler',\r\n\r\n    /**\r\n     * \r\n     */\r\n    $toggleTarget: '.js-toggler-target',\r\n\r\n    /**\r\n     * \r\n     */\r\n    openToggle: function(event) {\r\n        event.preventDefault();\r\n        // get the associated toggle target\r\n        let thisToggleTarget = $(this).attr('data-toggler-target');\r\n        // hide any toggle target that isn't the associated target\r\n        $(Toggler.$toggleTarget).not( $(`.${thisToggleTarget}`) ).removeClass('is-revealed');\r\n\r\n        $(`.${thisToggleTarget}`).toggleClass('is-revealed');\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    detectOutsideClick: function(event) {\r\n        if ( !$(event.target).closest( `${Toggler.$toggler}, ${Toggler.$toggleTarget}` ).length ) {\r\n            $(Toggler.$toggleTarget).removeClass('is-revealed');\r\n        }\r\n    }\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvdG9nZ2xlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUlBOzs7QUFHQSxPQUFPLE9BQVAsR0FBaUI7QUFDYjs7O0FBR0EsYUFBUyxtQkFBVztBQUNoQixnQkFBUSxLQUFSLEdBQWlCLG1CQUFtQixJQUFuQixDQUF3QixVQUFVLFNBQWxDLENBQUQsR0FBaUQsWUFBakQsR0FBZ0UsT0FBaEY7O0FBRUEsVUFBRSxRQUFRLFFBQVYsRUFBb0IsRUFBcEIsQ0FBdUIsT0FBdkIsRUFBZ0MsUUFBUSxVQUF4QztBQUNBLFVBQUUsUUFBRixFQUFZLEVBQVosQ0FBZSxRQUFRLEtBQXZCLEVBQThCLFFBQVEsa0JBQXRDO0FBQ0gsS0FUWTs7QUFXYjs7O0FBR0EsV0FBTyxPQWRNOztBQWdCYjs7O0FBR0EsY0FBVSxhQW5CRzs7QUFxQmI7OztBQUdBLG1CQUFlLG9CQXhCRjs7QUEwQmI7OztBQUdBLGdCQUFZLG9CQUFTLEtBQVQsRUFBZ0I7QUFDeEIsY0FBTSxjQUFOO0FBQ0E7QUFDQSxZQUFJLG1CQUFtQixFQUFFLElBQUYsRUFBUSxJQUFSLENBQWEscUJBQWIsQ0FBdkI7QUFDQTtBQUNBLFVBQUUsUUFBUSxhQUFWLEVBQXlCLEdBQXpCLENBQThCLFFBQU0sZ0JBQU4sQ0FBOUIsRUFBMEQsV0FBMUQsQ0FBc0UsYUFBdEU7O0FBRUEsZ0JBQU0sZ0JBQU4sRUFBMEIsV0FBMUIsQ0FBc0MsYUFBdEM7QUFDSCxLQXJDWTs7QUF1Q2I7OztBQUdBLHdCQUFvQiw0QkFBUyxLQUFULEVBQWdCO0FBQ2hDLFlBQUssQ0FBQyxFQUFFLE1BQU0sTUFBUixFQUFnQixPQUFoQixDQUE0QixRQUFRLFFBQXBDLFVBQWlELFFBQVEsYUFBekQsRUFBMkUsTUFBakYsRUFBMEY7QUFDdEYsY0FBRSxRQUFRLGFBQVYsRUFBeUIsV0FBekIsQ0FBcUMsYUFBckM7QUFDSDtBQUNKO0FBOUNZLENBQWpCIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8vIHRoZSBzZW1pLWNvbG9uIGJlZm9yZSB0aGUgZnVuY3Rpb24gaW52b2NhdGlvbiBpcyBhIHNhZmV0eVxyXG4vLyBuZXQgYWdhaW5zdCBjb25jYXRlbmF0ZWQgc2NyaXB0cyBhbmQvb3Igb3RoZXIgcGx1Z2luc1xyXG4vLyB0aGF0IGFyZSBub3QgY2xvc2VkIHByb3Blcmx5LlxyXG4vLyB0aGUgYW5vbnltb3VzIGZ1bmN0aW9uIHByb3RlY3RzIHRoZSBgJGAgYWxpYXNcclxuLy8gOyhmdW5jdGlvbiggJCwgd2luZG93LCBkb2N1bWVudCwgdW5kZWZpbmVkICkge1xyXG4vLyAgICAgLy8gaWYgd2UgZGV0ZWN0IGFuIGlvcyBkZXZpY2UsIHRoZW4gdXNlIHRoZSBgdG91Y2hzdGFydGBldmVudCBpbnN0ZWFkIG9mIHRoZSBgY2xpY2tgIGV2ZW50XHJcbi8vICAgICBsZXQgZXZlbnQgPSAoL2lQYWR8aVBob25lfGlQb2QvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpID8gXCJ0b3VjaHN0YXJ0XCIgOiBcImNsaWNrXCI7XHJcblxyXG4vLyAgICAgbGV0IGRlZmF1bHRzID0ge1xyXG5cclxuLy8gICAgIH1cclxuXHJcbi8vICAgICAvLyBQTFVHSU4gQ09OU1RSVUNUT1JcclxuLy8gICAgIGZ1bmN0aW9uIFRvZ2dsZXIoIGVsZW1lbnQsIG9wdGlvbnMgKSB7XHJcbi8vICAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcclxuXHJcbi8vICAgICAgICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoIHt9LCBkZWZhdWx0cywgb3B0aW9ucyApO1xyXG5cclxuLy8gICAgICAgICB0aGlzLl9kZWZhdWx0cyA9IGRlZmF1bHRzO1xyXG5cclxuLy8gICAgICAgICB0aGlzLl9uYW1lID0gVG9nZ2xlcjtcclxuXHJcbi8vICAgICAgICAgdGhpcy5pbml0KCk7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgVG9nZ2xlci5wcm90b3R5cGUgPSB7XHJcbi8vICAgICAgICAgaW5pdDogZnVuY3Rpb24oKSB7XHJcblxyXG4vLyAgICAgICAgIH1cclxuLy8gICAgIH1cclxuXHJcblxyXG5cclxuLy8gICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXHJcbi8vICAgICAgIEVYUE9SVCBPUFRJT05TXHJcbi8vICAgICBcXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyAgICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xyXG4vLyAgICAgICAgIGRlZmluZShbXSwgZnVuY3Rpb24oKSB7XHJcbi8vICAgICAgICAgICAgIHJldHVybiBUb2dnbGVyO1xyXG4vLyAgICAgICAgIH0pO1xyXG4vLyAgICAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBleHBvcnRzICE9PSBudWxsKSB7XHJcbi8vICAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBUb2dnbGVyO1xyXG4vLyAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICB3aW5kb3cuVG9nZ2xlciA9IFRvZ2dsZXI7XHJcbi8vICAgICB9XHJcblxyXG5cclxuXHJcbi8vIH0pKCBqUXVlcnksIHdpbmRvdyAsIGRvY3VtZW50ICk7XHJcblxyXG5cclxud2luZG93LlRvZ2dsZXIgPSB7XHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICovXHJcbiAgICBvblJlYWR5OiBmdW5jdGlvbigpIHtcclxuICAgICAgICBUb2dnbGVyLmV2ZW50ID0gKC9pUGFkfGlQaG9uZXxpUG9kLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSA/IFwidG91Y2hzdGFydFwiIDogXCJjbGlja1wiO1xyXG5cclxuICAgICAgICAkKFRvZ2dsZXIuJHRvZ2dsZXIpLm9uKCdjbGljaycsIFRvZ2dsZXIub3BlblRvZ2dsZSk7XHJcbiAgICAgICAgJChkb2N1bWVudCkub24oVG9nZ2xlci5ldmVudCwgVG9nZ2xlci5kZXRlY3RPdXRzaWRlQ2xpY2spO1xyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICovXHJcbiAgICBldmVudDogJ2NsaWNrJyxcclxuXHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICovXHJcbiAgICAkdG9nZ2xlcjogJy5qcy10b2dnbGVyJyxcclxuXHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICovXHJcbiAgICAkdG9nZ2xlVGFyZ2V0OiAnLmpzLXRvZ2dsZXItdGFyZ2V0JyxcclxuXHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICovXHJcbiAgICBvcGVuVG9nZ2xlOiBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgLy8gZ2V0IHRoZSBhc3NvY2lhdGVkIHRvZ2dsZSB0YXJnZXRcclxuICAgICAgICBsZXQgdGhpc1RvZ2dsZVRhcmdldCA9ICQodGhpcykuYXR0cignZGF0YS10b2dnbGVyLXRhcmdldCcpO1xyXG4gICAgICAgIC8vIGhpZGUgYW55IHRvZ2dsZSB0YXJnZXQgdGhhdCBpc24ndCB0aGUgYXNzb2NpYXRlZCB0YXJnZXRcclxuICAgICAgICAkKFRvZ2dsZXIuJHRvZ2dsZVRhcmdldCkubm90KCAkKGAuJHt0aGlzVG9nZ2xlVGFyZ2V0fWApICkucmVtb3ZlQ2xhc3MoJ2lzLXJldmVhbGVkJyk7XHJcblxyXG4gICAgICAgICQoYC4ke3RoaXNUb2dnbGVUYXJnZXR9YCkudG9nZ2xlQ2xhc3MoJ2lzLXJldmVhbGVkJyk7XHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKi9cclxuICAgIGRldGVjdE91dHNpZGVDbGljazogZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICBpZiAoICEkKGV2ZW50LnRhcmdldCkuY2xvc2VzdCggYCR7VG9nZ2xlci4kdG9nZ2xlcn0sICR7VG9nZ2xlci4kdG9nZ2xlVGFyZ2V0fWAgKS5sZW5ndGggKSB7XHJcbiAgICAgICAgICAgICQoVG9nZ2xlci4kdG9nZ2xlVGFyZ2V0KS5yZW1vdmVDbGFzcygnaXMtcmV2ZWFsZWQnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19"}